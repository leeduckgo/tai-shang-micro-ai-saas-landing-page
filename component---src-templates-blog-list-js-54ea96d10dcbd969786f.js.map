{"version":3,"file":"component---src-templates-blog-list-js-54ea96d10dcbd969786f.js","mappings":"qMAIO,MAAMA,GAAeC,EAAAA,EAAAA,SAAOC,EAAAA,GAAQC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAfJ,CAAe,kHAc9BK,EAAkBL,EAAAA,QAAOM,QAAOJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAdJ,CAAc,4GAOzCO,EAAAA,GAAMC,SAAS,QAAQ;;;;KAOdC,EAAcT,EAAAA,QAAOU,IAAGR,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,uMAErBW,IAAA,IAAC,WAAEC,GAAYD,EAAA,OAC3BC,GAA0B,kBAAkB,GAW5CL,EAAAA,GAAMC,SAAS,QAAQ;;;;;;;KAUdK,EAAeb,EAAAA,QAAOU,IAAGR,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAVJ,CAAU,8DAKlCO,EAAAA,GAAMC,SAAS,QAAQ;;KAKdM,EAAed,EAAAA,QAAOe,KAAIb,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAXJ,CAAW,uBAI1BgB,EAAgBhB,EAAAA,QAAOiB,GAAEf,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAATJ,CAAS,8DAMzBkB,EAAsBlB,EAAAA,QAAOmB,EAACjB,WAAA,CAAAC,YAAA,8BAAAC,YAAA,eAARJ,CAAQ,gECtC3C,MAjCiBW,IAAA,IAAC,KAChBS,EAAI,WACJR,EAAU,SACVS,EAAQ,KACRC,EAAI,WACJC,EAAU,MACVC,EAAK,YACLC,GACDd,EAAA,OACCe,EAAAA,cAACC,EAAc,CAACC,GAAIR,EAAMS,OAAK,EAACC,UAAU,QAAQC,GAAG,UAAUC,SAAU,IACvEN,EAAAA,cAACC,EAAiB,KAChBD,EAAAA,cAACC,EAAa,CAACf,WAAYA,GAAaS,GACxCK,EAAAA,cAACC,EAAc,KACbD,EAAAA,cAACC,EAAc,KACZL,EAAK,MAAIC,EAAW,mBAEvBG,EAAAA,cAACC,EAAe,KAAEH,GAClBE,EAAAA,cAACC,EAAqB,KAAEF,KAGb,C,0HCvBZ,MAAMQ,E,QAAoBjC,QAAOM,QAAOJ,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAdJ,CAAc,sNC6C/C,MAxCmBW,IAAA,IAAC,QAClBuB,EAAO,OACPC,EAAM,YACNC,EAAW,SACXC,EAAQ,SACRC,EAAQ,SACRC,GACD5B,EAAA,OACCe,EAAAA,cAACC,EAAmB,MAChBO,GACAR,EAAAA,cAACzB,EAAAA,EAAO,CAAC2B,GAAIU,EAAUT,OAAK,EAACC,UAAU,OAAOC,GAAG,UAAUC,SAAU,IAAK,qBAI5EN,EAAAA,cAAA,SACGU,EAAY,OAAKC,IAElBF,GACAT,EAAAA,cAACzB,EAAAA,EAAO,CACN2B,GAAIW,EACJV,OAAK,EACLC,UAAU,QACVC,GAAG,UACHC,SAAU,IACX,oBAIiB,EC4CxB,MAvEiBQ,IACf,MAAMC,EAAWD,EAAME,KAAKC,kBAAkBC,OACxC,YAAER,EAAW,SAAEC,GAAaG,EAAMK,YAClCX,EAA0B,IAAhBE,EACVD,EAASC,IAAgBC,EACzBC,EAAWF,EAAc,GAAM,EAAI,IAAM,UAASA,EAAc,GAChEG,EAAW,SAASH,EAAc,IAExC,OACEV,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACoB,EAAAA,EAAG,CAACtB,MAAM,8BACXE,EAAAA,cAACqB,EAAAA,EAAM,KACJN,EAASO,KACRrC,IAAA,IACEsC,MACEC,aAAa,WAAEtC,EAAU,SAAES,EAAQ,KAAEC,EAAI,MAAEE,EAAK,YAAEC,GAAa,WAC/DF,EACA4B,QAAQ,KAAE/B,KAEbT,EAAA,OACCe,EAAAA,cAAC0B,EAAAA,EAAQ,CACPC,IAAKjC,EACLA,KAAMA,EACNR,WAAYA,EACZS,SAAUA,EACVC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,EACPC,YAAaA,GACb,IAGNC,EAAAA,cAAC4B,EAAU,CACTpB,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,KAGb,C","sources":["webpack://kaiofelipejs.dev/./src/components/PostItem/styled.js","webpack://kaiofelipejs.dev/./src/components/PostItem/index.js","webpack://kaiofelipejs.dev/./src/components/Pagination/styled.js","webpack://kaiofelipejs.dev/./src/components/Pagination/index.js","webpack://kaiofelipejs.dev/./src/templates/blog-list.js"],"sourcesContent":["import styled from \"styled-components\"\nimport media from \"styled-media-query\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nexport const PostItemLink = styled(AniLink)`\n  display: flex;\n  text-decoration: none;\n  color: var(--texts);\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  & * {\n    cursor: inherit;\n  }\n`\n\nexport const PostItemWrapper = styled.section`\n  align-items: center;\n  border-bottom: 1px solid var(--borders);\n  display: flex;\n  padding: 2rem 3rem;\n  width: 100%;\n\n  ${media.lessThan(\"large\")`\n    align-items: flex-start;\n    flex-direction: column;\n    padding: 2rem 1rem;\n  `}\n`\n\nexport const PostItemTag = styled.div`\n  align-items: center;\n  background: ${({ background }) =>\n    background ? background : \"var(--mainColor)\"};\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  font-size: 1.1rem;\n  font-weight: 700;\n  justify-content: center;\n  min-height: 100px;\n  min-width: 100px;\n  text-transform: uppercase;\n\n  ${media.lessThan(\"large\")`\n    border-radius: 0;\n    font-size: 1rem;\n    min-height: auto;\n    min-width: auto;\n    padding: .2rem .5rem;\n    margin-bottom: .7rem;\n  `}\n`\n\nexport const PostItemInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 1.5rem;\n\n  ${media.lessThan(\"large\")`\n    margin: 0;\n  `}\n`\n\nexport const PostItemDate = styled.time`\n  font-size: 0.9rem;\n`\n\nexport const PostItemTitle = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin: 0.2rem 0 0.5rem;\n`\n\nexport const PostItemDescription = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 1.2;\n  margin: 0;\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport * as S from \"./styled\"\n\nconst PostItem = ({\n  slug,\n  background,\n  category,\n  date,\n  timeToRead,\n  title,\n  description,\n}) => (\n  <S.PostItemLink to={slug} cover direction=\"right\" bg=\"#55aaaa\" duration={0.6}>\n    <S.PostItemWrapper>\n      <S.PostItemTag background={background}>{category}</S.PostItemTag>\n      <S.PostItemInfo>\n        <S.PostItemDate>\n          {date} • {timeToRead} min de leitura\n        </S.PostItemDate>\n        <S.PostItemTitle>{title}</S.PostItemTitle>\n        <S.PostItemDescription>{description}</S.PostItemDescription>\n      </S.PostItemInfo>\n    </S.PostItemWrapper>\n  </S.PostItemLink>\n)\n\nPostItem.propTypes = {\n  slug: PropTypes.string.isRequired,\n  background: PropTypes.string,\n  category: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n}\n\nexport default PostItem\n","import styled from \"styled-components\"\n\nexport const PaginationWrapper = styled.section`\n  align-items: center;\n  border-top: 1px solid #8899a6;\n  color: var(--texts);\n  display: flex;\n  justify-content: space-between;\n  padding: 1.5rem 3rem;\n\n  a {\n    color: var(--texts);\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`\n","import React from \"react\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nimport PropTypes from \"prop-types\"\n\nimport * as S from \"./styled\"\n\nconst Pagination = ({\n  isFirst,\n  isLast,\n  currentPage,\n  numPages,\n  prevPage,\n  nextPage,\n}) => (\n  <S.PaginationWrapper>\n    {!isFirst && (\n      <AniLink to={prevPage} cover direction=\"left\" bg=\"#55aaaa\" duration={0.6}>\n        ← página anterior\n      </AniLink>\n    )}\n    <p>\n      {currentPage} de {numPages}\n    </p>\n    {!isLast && (\n      <AniLink\n        to={nextPage}\n        cover\n        direction=\"right\"\n        bg=\"#55aaaa\"\n        duration={0.6}\n      >\n        próxima página →\n      </AniLink>\n    )}\n  </S.PaginationWrapper>\n)\n\nPagination.propTypes = {\n  isFirst: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  numPages: PropTypes.number.isRequired,\n  prevPage: PropTypes.string,\n  nextPage: PropTypes.string,\n}\n\nexport default Pagination\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport Seo from \"components/seo\"\nimport PostItem from \"components/PostItem\"\nimport Pagination from \"components/Pagination\"\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? `/` : `/page/${currentPage - 1}`\n  const nextPage = `/page/${currentPage + 1}`\n\n  return (\n    <>\n      <Seo title=\"IndieHackers Account Book\" />\n      <Layout>\n        {postList.map(\n          ({\n            node: {\n              frontmatter: { background, category, date, title, description },\n              timeToRead,\n              fields: { slug },\n            },\n          }) => (\n            <PostItem\n              key={slug}\n              slug={slug}\n              background={background}\n              category={category}\n              date={date}\n              timeToRead={timeToRead}\n              title={title}\n              description={description}\n            />\n          )\n        )}\n        <Pagination\n          isFirst={isFirst}\n          isLast={isLast}\n          currentPage={currentPage}\n          numPages={numPages}\n          prevPage={prevPage}\n          nextPage={nextPage}\n        />\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            background\n            category\n            date(formatString: \"DD [de] MMMM [de] YYYY\", locale: \"pt-br\")\n            description\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default BlogList\n"],"names":["PostItemLink","styled","AniLink","withConfig","displayName","componentId","PostItemWrapper","section","media","lessThan","PostItemTag","div","_ref","background","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","slug","category","date","timeToRead","title","description","React","S","to","cover","direction","bg","duration","PaginationWrapper","isFirst","isLast","currentPage","numPages","prevPage","nextPage","props","postList","data","allMarkdownRemark","edges","pageContext","Seo","Layout","map","node","frontmatter","fields","PostItem","key","Pagination"],"sourceRoot":""}